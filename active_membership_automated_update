# this project has two lists, exited and active members list. The task is to automatically update the members list to the corresponding list, thus exit to exit list, active to active list

from random import randint as rand      # to assist generate random figures for our database. Not needed if you are using actual db

reg_members = 'members.txt'
inactive_members = 'inactive.txt'
active = ('yes', 'no')

def genFiles(current, old):
  '''
    params: two txt files
    returns: nothing
    
    the function generates members randomly
   '''
   # current members (mix of active and inactive members)
   with open(current, 'w+') as writefile:
        writefile.write("Membership No Date Joined Active \n")    # write the headers to the current file
        data = "{:^13} {:<11} {:<6}\n"  # formatting the data
        
        for row in range(50):
            date = str(rnd(2015, 2021)) + '-' + str(rnd(1,12)) + '-' + str(rnd(1, 28))    #generating random `
            writefile.write(data.format(rnd(10000, 99999), date, active[rnd(0, 1)]))     # writing the generated random details in the current text file
    
   # old members who are no longer active
   with open(old, 'w+') as writefile:
        writefile.write("Membership No Date Joined Active \n")    # write the headers to the current file
        data = "{:^13} {:<11} {:<6}\n"  # formatting the data
        
        for row in range(5):
            date = str(rnd(2015, 2021)) + '-' + str(rnd(1,12)) + '-' + str(rnd(1, 28))    #generating random `
            writefile.write(data.format(rnd(10000, 99999), date, active[1]))

def cleanFiles(reg_mem, ex_mem):
    '''
    Fxn attributes:
    params: 2 .txt files
    returns: nothing
    The function updates the member files based on the active column
    '''
    with open(reg_mem, 'w+') as writeFile:
          with open(ex_mem, 'a+') as appendFile:
              # get the data
              writeFile.seek(0,0)   #go to beginning of the writeFile
              members = writeFile.readlines()   
              header = members[0]   # get the header
              members.pop(0)        # remove the header
              inactive = [member for member in members if('no' in member)]    # save 'inactive' members in the inactive list
              
              writeFile.seek(0)
              writeFile.write(header)
              
              for member in members:
                  if(member in inactive):
                      appendFile.write(member)    # it would only be appended to the already existing inactive members
                  else:
                      writeFile.write(member)     # it would start from the beginning of the file and write the active members in the file
              writeFile.truncate()                # truncate() would delete the members at the end of writing the file, to prevent repetition


# testing the cleanFiles function
genFiles(reg_members, inactive_members)   # using the genFiles function to generate random members' details
cleanFiles(reg_members, inactive_members) # cleaning the files using cleanFiles

# reading the files
with open(reg_members, 'r') as readFile:
     print("Active Members: \n")
     print(readFile.read())

with open(inactive_members, 'r') as readFile:
     print("Inactive Members: \n")
     print(readFile.read())

              
              
              
    
